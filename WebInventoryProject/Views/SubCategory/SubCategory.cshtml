@model WebInventoryProject.ViewModel.SubcategoryViewModel

@{
    ViewBag.Title = "CreateOrEditSubCategory";
    Layout = "~/Views/Shared/_LayoutAdminPanel.cshtml";
}
<div id="page-wrapper">
    <div class="main-page login-page ">
        <div class="widget-shadow">
            <div class="login-body">

                @using (Html.BeginForm("SubCategory", "SubCategory", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.Partial("MessageAlert")
                <div class="form-horizontal">
                    <h4>settingSubCategory</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <div class="col-md-10" typeof="hi">
                            @Html.HiddenFor(model => model.settingSubCategory.subcategoryId, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.settingSubCategory.categoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.settingSubCategory.categoryId, new SelectList(Model.settingCategory, "categoryId", "categoryName"), "Select Category", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.settingSubCategory.categoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.settingSubCategory.subcategoryCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.settingSubCategory.subcategoryCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.settingSubCategory.subcategoryCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.settingSubCategory.subcategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.settingSubCategory.subcategoryName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.settingSubCategory.subcategoryName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.settingSubCategory.isActive, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.settingSubCategory.isActive)
                                @Html.ValidationMessageFor(model => model.settingSubCategory.isActive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    @if (Model == null)
                    {
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    }
                    @if (Model != null)
                    {
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Update" class="btn btn-default" />
                            </div>
                        </div>
                    }
                </div>
                }
            </div>
        </div>
    </div>
</div>

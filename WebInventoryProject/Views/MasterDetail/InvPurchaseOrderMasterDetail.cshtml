@using WebInventoryProject.ViewModel
@model InvPurchaseOrderViewModel

@{
    ViewBag.Title = "InvPurchaseOrderMasterDetail";
    Layout = "~/Views/Shared/_LayoutAdminPanel.cshtml";
}

<h2>Inv Purchase Order Master Detail</h2>


<div class="modal fade" id="newOrderModal">
    <div class="modal-dialog modal-lg" style=" width : 900px !important;">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4>Add New Order</h4>
            </div>
            <form id="NewOrderForm">
                <div class="modal-body">
                    @*Customer Details*@
                    <h5 style="color:#ff6347">Purchase Order</h5>
                    <hr />
                    <div class="form-horizontal">

                        <div class="form-group">
                            <div class="col-md-10" typeof="hi">
                                @Html.HiddenFor(m => m.invPurchaseOrderMaster.poId, new { htmlAttributes = new { @class = "form-control", @id = "poId" } })
                            </div>
                        </div>
                        @if (Model.UserType == "Admin")
                        {
                            <div class="form-group">
                                <label class="control-label col-md-2">
                                    Date
                                </label>
                                <div class="col-md-4">
                                    <input type="date" class="form-control" name="poDate" id="poDate" />
                                </div>
                                <label class="control-label col-md-2">
                                    PO No
                                </label>
                                <div class="col-md-4">
                                    <input type="number" class="form-control" name="poNo" id="poNo" />
                                    @Html.TextBoxFor(model => model.code, new { @id = "code", @readonly = "readonly", @disabled = "disabled", required = "required" })
                                    @*@Html.EditorFor(model => model.invPurchaseOrderMaster.poNo, new { @id = "poNo" })*@
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-2">
                                    Branch
                                </label>
                                <div class="col-md-4">
                                    @Html.DropDownListFor(m => m.invPurchaseOrderMaster.branchId, new SelectList(Model.settingBranches, "branchId", "branchName"), "Select Branch", new { @id = "branchId", @style = "width: 270px;" })
                                    @Html.ValidationMessageFor(m => m.invPurchaseOrderMaster.branchId, "", new { @class = "text-danger" })
                                </div>
                                <label class="control-label col-md-2">
                                    Department
                                </label>
                                <div class="col-md-4">
                                    @Html.DropDownListFor(m => m.invPurchaseOrderMaster.departmentId, new SelectList(Model.settingDepartments, "departmentId", "departmentName"), "Select Department", new { @id = "departmentId", @style = "width: 270px;" })
                                    @Html.ValidationMessageFor(m => m.invPurchaseOrderMaster.departmentId, "", new { @class = "text-danger" })
                                </div>

                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                <label class="control-label col-md-2">
                                    Date
                                </label>
                                <div class="col-md-4">
                                    @*<input type="date" class="form-control" name="poDate" id="poDate" />*@
                                    @Html.TextBoxFor(x => x.poDate, "{0:yyyy-MM-dd}", new { @type = "date", @id = "poDate", @class = "ddate", @style = "width: 270px;", @readonly = "readonly", @disabled = "disabled" })
                                </div>
                                <label class="control-label col-md-2">
                                    PO No
                                </label>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.code, new { @id = "code", @readonly = "readonly", @disabled = "disabled", required = "required" })
                                    @*@Html.EditorFor(model => model.invPurchaseOrderMaster.poNo, new { @id = "poNo" })*@
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-2">
                                    Branch
                                </label>
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.settingBr.branchName, new { htmlAttributes = new { @id = "branchId", @style = "width: 270px;", disabled = "disabled", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(m => m.settingBr.branchName, "", new { @class = "text-danger" })
                                </div>
                                <label class="control-label col-md-2">
                                    Department
                                </label>
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.settingDept.departmentName, new { htmlAttributes = new { @id = "departmentId", @style = "width: 270px;", disabled = "disabled", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(m => m.settingDept.departmentName, "", new { @class = "text-danger" })
                                </div>

                            </div>
                        }

                        <div class="form-group">
                            <label class="control-label col-md-2">
                                Vendor
                            </label>
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.invPurchaseOrderMaster.SPId, new SelectList(Model.Supplier, "SPId", "Vendor"), "Select Vendor", new { @id = "SPId", @style = "width: 270px;" })
                                @Html.ValidationMessageFor(m => m.invPurchaseOrderMaster.SPId, "", new { @class = "text-danger" })
                            </div>
                            <label class="control-label col-md-2">
                                Description
                            </label>
                            <div class="col-md-4">
                                <input type="text" class="form-control" name="desc" id="desc" />
                                @*@Html.EditorFor(model => model.invPurchaseOrderMaster.desc, new { @id = "desc" })*@
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">
                                Status
                            </label>
                            <div class="col-md-4">

                                @Html.EditorFor(model => model.invPurchaseOrderMaster.status, new { @id = "status" })
                            </div>
                            <div class="col-md-10" typeof="hi">
                                @Html.HiddenFor(model => model.invPurchaseOrderMaster.dateTime, new { htmlAttributes = new { @class = "form-control", @id = "dateTime" } })
                            </div>
                            <div class="col-md-10" typeof="hi">
                                @Html.HiddenFor(model => model.invPurchaseOrderMaster.modifiedDate, new { htmlAttributes = new { @class = "form-control", @id = "modifiedDate" } })
                            </div>
                            <div class="col-md-10" typeof="hi">
                                @Html.HiddenFor(model => model.invPurchaseOrderMaster.modifiedBy, new { htmlAttributes = new { @class = "form-control", @id = "modifiedBy" } })
                            </div>
                            <div class="col-md-10" typeof="hi">
                                @Html.HiddenFor(model => model.invPurchaseOrderMaster.workStation, new { htmlAttributes = new { @class = "form-control", @id = "workStation" } })
                            </div>
                            <div class="col-md-10" typeof="hi">
                                @Html.HiddenFor(model => model.invPurchaseOrderMaster.isPost, new { htmlAttributes = new { @class = "form-control", @id = "isPost" } })
                            </div>
                        </div>



                        @*Demand Details*@
                        <h5 style="margin-top:10px;color:#ff6347">Purchase Order Details</h5>
                        <hr />
                        <div class="form-horizontal">
                            <input type="hidden" id="OrderId" />
                            <div class="form-group">
                                <label class="control-label col-md-2">
                                    Item
                                </label>
                                <div class="col-md-4">
                                    @Html.DropDownListFor(m => m.invPurchaseOrderDetail.itemId, new SelectList(Model.settingItems, "itemId", "itemName"), "Select Item", new { @id = "ItemId", @style = "width: 270px;" })
                                    @Html.ValidationMessageFor(m => m.invPurchaseOrderDetail.itemId, "", new { @class = "text-danger" })
                                </div>
                                <label class="control-label col-md-2">
                                    Unit
                                </label>
                                <div class="col-md-4">
                                    @Html.DropDownListFor(m => m.invPurchaseOrderDetail.unitId, new SelectList(Model.settingUnit, "unitId", "unitName"), "Select Unit", new { @id = "unitId", @style = "width: 270px;" })
                                    @Html.ValidationMessageFor(m => m.invPurchaseOrderDetail.unitId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-2">
                                    Quantity
                                </label>
                                <div class="col-md-4">
                                    <input type="number" class="form-control" name="qty" id="qty" />
                                    @*@Html.EditorFor(model => model.invPurchaseOrderDetail.qty, new { @id = "qty" })*@
                                </div>
                                <label class="control-label col-md-2">
                                    Rate
                                </label>
                                <div class="col-md-4">
                                    <input type="number" class="form-control" name="rate" id="rate" />
                                    @*@Html.EditorFor(model => model.invPurchaseOrderDetail.rate, new { @id = "rate" })*@
                                </div>
                            </div>

                            <div class="form-group">

                                <label class="control-label col-md-2">
                                    Grn Qty
                                </label>
                                <div class="col-md-4">
                                    <input type="number" class="form-control" name="grnQty" id="grnQty" />
                                    @*@Html.EditorFor(model => model.invPurchaseOrderDetail.grnQty, new { @id = "grnQty" })*@
                                </div>
                                <label class="control-label col-md-2">
                                    Stock
                                </label>
                                <div class="col-md-4">
                                    <input type="number" class="form-control" name="stock" , id="stock" } />
                                    @*@Html.EditorFor(model => model.invPurchaseOrderDetail.stock, new { @id = "stock" })*@
                                </div>

                            </div>
                            <div class="form-group">

                                <label class="control-label col-md-2">
                                    Status
                                </label>
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.invPurchaseOrderDetail.status, new { @id = "status" })
                                </div>
                                <label class="control-label col-md-2">
                                    Enable
                                </label>
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.invPurchaseOrderDetail.isActive, new { @id = "isActive" })
                                </div>
                                <div class="col-md-2">
                                    <a id="addToList" class="btn btn-primary">Add To List</a>
                                </div>
                            </div>
                            <table id="detailsTable" class="table">
                                <thead>
                                    <tr>
                                        <th style="width:30%">Item</th>
                                        <th style="width:10%">Unit</th>
                                        <th style="width:25%">Qty</th>
                                        <th style="width:25%">Rate</th>
                                        <th style="width:25%">GRN Qty</th>
                                        <th style="width:25%">Stock</th>
                                        <th style="width:10%">Status</th>
                                        <th style="width:10%">Enable</th>

                                        <th style="width:10%;visibility:hidden;">itemid</th>
                                        <th style="width:10%;visibility:hidden;">unitId</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="reset" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button id="saveDemand" type="submit" class="btn btn-danger">Save Order</button>
                    </div>
            </form>
        </div>
    </div>
</div>

<script>

    //$(document.onload(function myfunction() {
    //    alert('i am here')
    //    $("#newOrderModal").modal();
    //}));
    $(document).ready(function () {
        $("#newOrderModal").modal();
        return false;
    });

    //    e.preventDefault();


    $('#addToList').click(function (e) {

        e.preventDefault();
        if ($('#ItemId').val() == "" || $('#unitId').val() == "" || $('#qty').val() == "" || $('#rate').val() == "" || $('#stock').val() == "" || $('#grnQty').val() == "" || $('#status').val() == "" || $('#isActive').val() == "") return;

        alert('i am here')
        ItemName = $('#ItemId option:selected').text();
        unitName = $('#unitId option:selected').text();
        qty = $('#qty').val();
        rate = $('#rate').val();
        grnQty = $('#grnQty').val();
        stock = $('#stock').val();      
        status = $('#@Html.IdFor(m => m.invPurchaseOrderDetail.status)').val();
        isActive = $('#@Html.IdFor(m => m.invPurchaseOrderDetail.isActive)').val();
        itemId = $('#ItemId option:selected').val();
        unitId = $('#unitId option:selected').val();

            detailsTableBody = $('#detailsTable tbody');

        var GetProducts = '<tr><td>' + ItemName + '</td><td>' + unitName + '</td><td>' + qty + '</td><td>' + (parseFloat(rate) * parseInt(qty)) + '</td><td>' + grnQty + '</td><td>' + stock + '</td><td>' + status + '</td><td>' + isActive + '</td><td style="width:0%;visibility:hidden;">' + itemId + '</td><td style="width:0%;visibility:hidden;" >' + unitId + '</td><td><a data-itemId="0" href="#" class="deleteItem" >Remove</a></td></tr>'

        detailsTableBody.append(GetProducts);
        clearItems();

    })


    $(document).on('click', 'a.deleteItem', function () {
        $(this).parents('tr').css("background-color", "red").fadeOut(800, function () {
            $(this).remove('tr');
        })
    })

    //After Add A New Order In The List, Clear Clean The Form For Add More Order.
    function clearItems() {

        $('#qty').val('');
        $('#rate').val('');
        $('#stock').val('');
        $('#grnQty').val('');
        $('input:checkbox').removeAttr('checked');
        $("#ItemId").val('');
        $("#unitId").val('');
    }
    // After Add A New Order In The List, If You Want, You Can Remove It.
    // by NOOR
    function saveDemand(data) {
        return $.ajax
            ({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: "/MasterDetail/InvPurchaseOrderMasterDetail",
                data: data,
                success: function (result) {
                    window.location.replace("/MasterDetail/IndexInvPurchaseOrder")                    
                },
                error: function () {
                    alert('Error!');
                    location.reload();
                },

            });
    }

    //Collect Multiple Order List For Pass To Controller //BY ARTICLE


    //pass data from view to controller BY NOOR
    $('#saveDemand').click(function (e) {
        if ($('#poDate').val() == "" || $('#poNo').val() == "" || $('#desc').val() == "" || $('#branchId').val() == "" || $('#departmentId').val() == "" ) return;
        e.preventDefault();
        var PurchaseDetailsArray = [];
        PurchaseDetailsArray.length = 0;

        $.each($('#detailsTable tbody tr'), function () {
            PurchaseDetailsArray.push({
                qty: $(this).find('td:eq(2)').html(),
                rate: $(this).find('td:eq(3)').html(),
                grnQty: $(this).find('td:eq(4)').html(),
                stock: $(this).find('td:eq(5)').html(),
                status: $(this).find('td:eq(6)').html(),
                isActive: $(this).find('td:eq(7)').html(),
                itemId: $(this).find('td:eq(8)').html(),
                unitId: $(this).find('td:eq(9)').html(),
            });
        });

        var PurchaseMasterArray =
        {
            poId : $('#@Html.IdFor(m => m.invPurchaseOrderMaster.poId)').val(),
            poDate: $('#poDate').val(),
            
            poNo: $('#code').val(),

            desc: $('#desc').val(),
            status : $('#@Html.IdFor(m => m.invPurchaseOrderMaster.status)').val(),
            dateTime : $('#@Html.IdFor(m => m.invPurchaseOrderMaster.dateTime)').val(),
            modifiedDate : $('#@Html.IdFor(m => m.invPurchaseOrderMaster.modifiedDate)').val(),
            modifiedBy : $('#@Html.IdFor(m => m.invPurchaseOrderMaster.modifiedBy)').val(),
            workStation : $('#@Html.IdFor(m => m.invPurchaseOrderMaster.workStation)').val(),
            isPost : $('#@Html.IdFor(m => m.invPurchaseOrderMaster.isPost)').val(),
            branchId : $('#branchId option:selected').val(),
            departmentId: $('#departmentId option:selected').val(),
            SPId: $('#SPId option:selected').val()

        }


        var PurchaseOrderMasterArray = new Array();
        PurchaseOrderMasterArray = PurchaseMasterArray;
        var PurchaseOrderDetailArray = new Array();
        PurchaseOrderDetailArray = PurchaseDetailsArray;

        var data = JSON.stringify
            ({
                OrderMasterArray: PurchaseOrderMasterArray,
                OrderDetailArray: PurchaseOrderDetailArray,
            });

        $.when(saveDemand(data)).then(function (response) {
            console.log(response);
        }).fail(function (err) {
            console.log(err);
        });

    });

                            //After Click Save Button Pass All Data View To Controller For Save Database



</script>
<style>
    .css-serial {
        counter-reset: serial-number; /* Set the serial number counter to 0 */
    }

        .css-serial td:first-child:before {
            counter-increment: serial-number; /* Increment the serial number counter */
            content: counter(serial-number); /* Display the counter */
        }


    .card {
        position: relative;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 1px solid rgba(0, 0, 0, 0.125);
        border-radius: 0.25rem;
    }

        .card > hr {
            margin-right: 0;
            margin-left: 0;
        }

        .card > .list-group:first-child .list-group-item:first-child {
            border-top-left-radius: 0.25rem;
            border-top-right-radius: 0.25rem;
        }

        .card > .list-group:last-child .list-group-item:last-child {
            border-bottom-right-radius: 0.25rem;
            border-bottom-left-radius: 0.25rem;
        }

    .card-body {
        -webkit-box-flex: 1;
        -ms-flex: 1 1 auto;
        flex: 1 1 auto;
        padding: 1.25rem;
    }

    .card-title {
        margin-bottom: 0.75rem;
    }

    .card-subtitle {
        margin-top: -0.375rem;
        margin-bottom: 0;
    }

    .card-text:last-child {
        margin-bottom: 0;
    }

    .card-link:hover {
        text-decoration: none;
    }

    .card-link + .card-link {
        margin-left: 1.25rem;
    }

    .card-header {
        padding: 0.75rem 1.25rem;
        margin-bottom: 0;
        background-color: rgba(0, 0, 0, 0.03);
        border-bottom: 1px solid rgba(0, 0, 0, 0.125);
    }

        .card-header:first-child {
            border-radius: calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0;
        }

        .card-header + .list-group .list-group-item:first-child {
            border-top: 0;
        }
</style>


